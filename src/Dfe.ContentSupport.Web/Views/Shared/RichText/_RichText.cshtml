@model RichTextContentItem

@{
    var nodeType = Model.NodeType;
    
    switch (nodeType)
    {
        case RichTextNodeType.Document:
            <partial name="RichText/_Document" model="@Model" />
            break;
        case RichTextNodeType.Paragraph:
            <partial name="RichText/_Paragraph" model="@Model" />
            break;
        case RichTextNodeType.Heading2:
            <partial name="RichText/_H2" model="@Model" />
            break;
        case RichTextNodeType.Heading3:
            <partial name="RichText/_H3" model="@Model" />
            break;
        case RichTextNodeType.Heading4:
            <partial name="RichText/_H4" model="@Model" />
            break;
        case RichTextNodeType.Heading5:
            <partial name="RichText/_H5" model="@Model" />
            break;
        case RichTextNodeType.Heading6:
            <partial name="RichText/_H6" model="@Model" />
            break;
        case RichTextNodeType.UnorderedList:
            <partial name="RichText/_UnorderedList" model="@Model" />
            break;
        case RichTextNodeType.OrderedList:
            <partial name="RichText/_OrderedList" model="@Model" />
            break;
        case RichTextNodeType.ListItem:
            <partial name="RichText/_ListItem" model="@Model" />
            break;
        case RichTextNodeType.Hyperlink:
            <partial name="RichText/_Hyperlink" model="@Model" />
            break;
        case RichTextNodeType.Table:
            <partial name="RichText/_Table" model="@Model" />
            break;
        case RichTextNodeType.TableRow:
            <partial name="RichText/_TableRow" model="@Model" />
            break;
        case RichTextNodeType.TableHeaderCell:
            <partial name="RichText/_TableHeaderCell" model="@Model" />
            break;
        case RichTextNodeType.TableCell:
            <partial name="RichText/_TableCell" model="@Model" />
            break;
        case RichTextNodeType.Hr:
            <hr />
            break;
        case RichTextNodeType.EmbeddedAsset:
            <partial name="RichText/_Asset" model="@Model" />
            break;
        case RichTextNodeType.Text:
            <partial name="RichText/_Text" model="@Model" />
            break;
        case RichTextNodeType.EmbeddedEntry:
        case RichTextNodeType.EmbeddedEntryInline:
            <partial name="RichText/_Entry" model="@Model" />
            break;
        case RichTextNodeType.Unknown:
        default:
            throw new ArgumentOutOfRangeException(nameof(nodeType));
    }
}